// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registry/entity.proto

package registry // import "github.com/oasislabs/ekiden/go/grpc/registry"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/oasislabs/ekiden/go/grpc/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WatchEntityResponse_ChangeType int32

const (
	WatchEntityResponse_REGISTERED   WatchEntityResponse_ChangeType = 0
	WatchEntityResponse_DEREGISTERED WatchEntityResponse_ChangeType = 1
)

var WatchEntityResponse_ChangeType_name = map[int32]string{
	0: "REGISTERED",
	1: "DEREGISTERED",
}
var WatchEntityResponse_ChangeType_value = map[string]int32{
	"REGISTERED":   0,
	"DEREGISTERED": 1,
}

func (x WatchEntityResponse_ChangeType) String() string {
	return proto.EnumName(WatchEntityResponse_ChangeType_name, int32(x))
}
func (WatchEntityResponse_ChangeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{9, 0}
}

type WatchNodeResponse_ChangeType int32

const (
	WatchNodeResponse_REGISTERED   WatchNodeResponse_ChangeType = 0
	WatchNodeResponse_DEREGISTERED WatchNodeResponse_ChangeType = 1
)

var WatchNodeResponse_ChangeType_name = map[int32]string{
	0: "REGISTERED",
	1: "DEREGISTERED",
}
var WatchNodeResponse_ChangeType_value = map[string]int32{
	"REGISTERED":   0,
	"DEREGISTERED": 1,
}

func (x WatchNodeResponse_ChangeType) String() string {
	return proto.EnumName(WatchNodeResponse_ChangeType_name, int32(x))
}
func (WatchNodeResponse_ChangeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{20, 0}
}

type RegisterRequest struct {
	// Signed blob should be a CBOR-serialized entity.
	Entity               *common.Signed `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{0}
}
func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(dst, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetEntity() *common.Signed {
	if m != nil {
		return m.Entity
	}
	return nil
}

type RegisterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{1}
}
func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (dst *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(dst, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

type DeregisterRequest struct {
	// Signed blob should be the time when the deregister request was made.
	Timestamp            *common.Signed `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeregisterRequest) Reset()         { *m = DeregisterRequest{} }
func (m *DeregisterRequest) String() string { return proto.CompactTextString(m) }
func (*DeregisterRequest) ProtoMessage()    {}
func (*DeregisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{2}
}
func (m *DeregisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeregisterRequest.Unmarshal(m, b)
}
func (m *DeregisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeregisterRequest.Marshal(b, m, deterministic)
}
func (dst *DeregisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeregisterRequest.Merge(dst, src)
}
func (m *DeregisterRequest) XXX_Size() int {
	return xxx_messageInfo_DeregisterRequest.Size(m)
}
func (m *DeregisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeregisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeregisterRequest proto.InternalMessageInfo

func (m *DeregisterRequest) GetTimestamp() *common.Signed {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type DeregisterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeregisterResponse) Reset()         { *m = DeregisterResponse{} }
func (m *DeregisterResponse) String() string { return proto.CompactTextString(m) }
func (*DeregisterResponse) ProtoMessage()    {}
func (*DeregisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{3}
}
func (m *DeregisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeregisterResponse.Unmarshal(m, b)
}
func (m *DeregisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeregisterResponse.Marshal(b, m, deterministic)
}
func (dst *DeregisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeregisterResponse.Merge(dst, src)
}
func (m *DeregisterResponse) XXX_Size() int {
	return xxx_messageInfo_DeregisterResponse.Size(m)
}
func (m *DeregisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeregisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeregisterResponse proto.InternalMessageInfo

type EntityRequest struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityRequest) Reset()         { *m = EntityRequest{} }
func (m *EntityRequest) String() string { return proto.CompactTextString(m) }
func (*EntityRequest) ProtoMessage()    {}
func (*EntityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{4}
}
func (m *EntityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityRequest.Unmarshal(m, b)
}
func (m *EntityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityRequest.Marshal(b, m, deterministic)
}
func (dst *EntityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityRequest.Merge(dst, src)
}
func (m *EntityRequest) XXX_Size() int {
	return xxx_messageInfo_EntityRequest.Size(m)
}
func (m *EntityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntityRequest proto.InternalMessageInfo

func (m *EntityRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type EntityResponse struct {
	Entity               *common.Entity `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EntityResponse) Reset()         { *m = EntityResponse{} }
func (m *EntityResponse) String() string { return proto.CompactTextString(m) }
func (*EntityResponse) ProtoMessage()    {}
func (*EntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{5}
}
func (m *EntityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityResponse.Unmarshal(m, b)
}
func (m *EntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityResponse.Marshal(b, m, deterministic)
}
func (dst *EntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityResponse.Merge(dst, src)
}
func (m *EntityResponse) XXX_Size() int {
	return xxx_messageInfo_EntityResponse.Size(m)
}
func (m *EntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EntityResponse proto.InternalMessageInfo

func (m *EntityResponse) GetEntity() *common.Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type EntitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntitiesRequest) Reset()         { *m = EntitiesRequest{} }
func (m *EntitiesRequest) String() string { return proto.CompactTextString(m) }
func (*EntitiesRequest) ProtoMessage()    {}
func (*EntitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{6}
}
func (m *EntitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntitiesRequest.Unmarshal(m, b)
}
func (m *EntitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntitiesRequest.Marshal(b, m, deterministic)
}
func (dst *EntitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntitiesRequest.Merge(dst, src)
}
func (m *EntitiesRequest) XXX_Size() int {
	return xxx_messageInfo_EntitiesRequest.Size(m)
}
func (m *EntitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntitiesRequest proto.InternalMessageInfo

type EntitiesResponse struct {
	Entity               []*common.Entity `protobuf:"bytes,1,rep,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EntitiesResponse) Reset()         { *m = EntitiesResponse{} }
func (m *EntitiesResponse) String() string { return proto.CompactTextString(m) }
func (*EntitiesResponse) ProtoMessage()    {}
func (*EntitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{7}
}
func (m *EntitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntitiesResponse.Unmarshal(m, b)
}
func (m *EntitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntitiesResponse.Marshal(b, m, deterministic)
}
func (dst *EntitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntitiesResponse.Merge(dst, src)
}
func (m *EntitiesResponse) XXX_Size() int {
	return xxx_messageInfo_EntitiesResponse.Size(m)
}
func (m *EntitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EntitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EntitiesResponse proto.InternalMessageInfo

func (m *EntitiesResponse) GetEntity() []*common.Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type WatchEntityRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchEntityRequest) Reset()         { *m = WatchEntityRequest{} }
func (m *WatchEntityRequest) String() string { return proto.CompactTextString(m) }
func (*WatchEntityRequest) ProtoMessage()    {}
func (*WatchEntityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{8}
}
func (m *WatchEntityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchEntityRequest.Unmarshal(m, b)
}
func (m *WatchEntityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchEntityRequest.Marshal(b, m, deterministic)
}
func (dst *WatchEntityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchEntityRequest.Merge(dst, src)
}
func (m *WatchEntityRequest) XXX_Size() int {
	return xxx_messageInfo_WatchEntityRequest.Size(m)
}
func (m *WatchEntityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchEntityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchEntityRequest proto.InternalMessageInfo

type WatchEntityResponse struct {
	EventType            WatchEntityResponse_ChangeType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=registry.WatchEntityResponse_ChangeType" json:"event_type,omitempty"`
	Entity               *common.Entity                 `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WatchEntityResponse) Reset()         { *m = WatchEntityResponse{} }
func (m *WatchEntityResponse) String() string { return proto.CompactTextString(m) }
func (*WatchEntityResponse) ProtoMessage()    {}
func (*WatchEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{9}
}
func (m *WatchEntityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchEntityResponse.Unmarshal(m, b)
}
func (m *WatchEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchEntityResponse.Marshal(b, m, deterministic)
}
func (dst *WatchEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchEntityResponse.Merge(dst, src)
}
func (m *WatchEntityResponse) XXX_Size() int {
	return xxx_messageInfo_WatchEntityResponse.Size(m)
}
func (m *WatchEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchEntityResponse proto.InternalMessageInfo

func (m *WatchEntityResponse) GetEventType() WatchEntityResponse_ChangeType {
	if m != nil {
		return m.EventType
	}
	return WatchEntityResponse_REGISTERED
}

func (m *WatchEntityResponse) GetEntity() *common.Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type RegisterNodeRequest struct {
	// Signed blob should be a CBOR-serialized node.
	Node                 *common.Signed `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RegisterNodeRequest) Reset()         { *m = RegisterNodeRequest{} }
func (m *RegisterNodeRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeRequest) ProtoMessage()    {}
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{10}
}
func (m *RegisterNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeRequest.Unmarshal(m, b)
}
func (m *RegisterNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeRequest.Merge(dst, src)
}
func (m *RegisterNodeRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeRequest.Size(m)
}
func (m *RegisterNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeRequest proto.InternalMessageInfo

func (m *RegisterNodeRequest) GetNode() *common.Signed {
	if m != nil {
		return m.Node
	}
	return nil
}

type RegisterNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterNodeResponse) Reset()         { *m = RegisterNodeResponse{} }
func (m *RegisterNodeResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeResponse) ProtoMessage()    {}
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{11}
}
func (m *RegisterNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeResponse.Unmarshal(m, b)
}
func (m *RegisterNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeResponse.Marshal(b, m, deterministic)
}
func (dst *RegisterNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeResponse.Merge(dst, src)
}
func (m *RegisterNodeResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeResponse.Size(m)
}
func (m *RegisterNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeResponse proto.InternalMessageInfo

type NodeRequest struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeRequest) Reset()         { *m = NodeRequest{} }
func (m *NodeRequest) String() string { return proto.CompactTextString(m) }
func (*NodeRequest) ProtoMessage()    {}
func (*NodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{12}
}
func (m *NodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeRequest.Unmarshal(m, b)
}
func (m *NodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeRequest.Marshal(b, m, deterministic)
}
func (dst *NodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeRequest.Merge(dst, src)
}
func (m *NodeRequest) XXX_Size() int {
	return xxx_messageInfo_NodeRequest.Size(m)
}
func (m *NodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeRequest proto.InternalMessageInfo

func (m *NodeRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type NodeResponse struct {
	Node                 *common.Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *NodeResponse) Reset()         { *m = NodeResponse{} }
func (m *NodeResponse) String() string { return proto.CompactTextString(m) }
func (*NodeResponse) ProtoMessage()    {}
func (*NodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{13}
}
func (m *NodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeResponse.Unmarshal(m, b)
}
func (m *NodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeResponse.Marshal(b, m, deterministic)
}
func (dst *NodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeResponse.Merge(dst, src)
}
func (m *NodeResponse) XXX_Size() int {
	return xxx_messageInfo_NodeResponse.Size(m)
}
func (m *NodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeResponse proto.InternalMessageInfo

func (m *NodeResponse) GetNode() *common.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type NodesRequest struct {
	Epoch                uint64   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodesRequest) Reset()         { *m = NodesRequest{} }
func (m *NodesRequest) String() string { return proto.CompactTextString(m) }
func (*NodesRequest) ProtoMessage()    {}
func (*NodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{14}
}
func (m *NodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesRequest.Unmarshal(m, b)
}
func (m *NodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesRequest.Marshal(b, m, deterministic)
}
func (dst *NodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesRequest.Merge(dst, src)
}
func (m *NodesRequest) XXX_Size() int {
	return xxx_messageInfo_NodesRequest.Size(m)
}
func (m *NodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodesRequest proto.InternalMessageInfo

func (m *NodesRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type NodesResponse struct {
	Node                 []*common.Node `protobuf:"bytes,1,rep,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NodesResponse) Reset()         { *m = NodesResponse{} }
func (m *NodesResponse) String() string { return proto.CompactTextString(m) }
func (*NodesResponse) ProtoMessage()    {}
func (*NodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{15}
}
func (m *NodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesResponse.Unmarshal(m, b)
}
func (m *NodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesResponse.Marshal(b, m, deterministic)
}
func (dst *NodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesResponse.Merge(dst, src)
}
func (m *NodesResponse) XXX_Size() int {
	return xxx_messageInfo_NodesResponse.Size(m)
}
func (m *NodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodesResponse proto.InternalMessageInfo

func (m *NodesResponse) GetNode() []*common.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type EntityNodesRequest struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityNodesRequest) Reset()         { *m = EntityNodesRequest{} }
func (m *EntityNodesRequest) String() string { return proto.CompactTextString(m) }
func (*EntityNodesRequest) ProtoMessage()    {}
func (*EntityNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{16}
}
func (m *EntityNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityNodesRequest.Unmarshal(m, b)
}
func (m *EntityNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityNodesRequest.Marshal(b, m, deterministic)
}
func (dst *EntityNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityNodesRequest.Merge(dst, src)
}
func (m *EntityNodesRequest) XXX_Size() int {
	return xxx_messageInfo_EntityNodesRequest.Size(m)
}
func (m *EntityNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntityNodesRequest proto.InternalMessageInfo

func (m *EntityNodesRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type EntityNodesResponse struct {
	Node                 []*common.Node `protobuf:"bytes,1,rep,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EntityNodesResponse) Reset()         { *m = EntityNodesResponse{} }
func (m *EntityNodesResponse) String() string { return proto.CompactTextString(m) }
func (*EntityNodesResponse) ProtoMessage()    {}
func (*EntityNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{17}
}
func (m *EntityNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityNodesResponse.Unmarshal(m, b)
}
func (m *EntityNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityNodesResponse.Marshal(b, m, deterministic)
}
func (dst *EntityNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityNodesResponse.Merge(dst, src)
}
func (m *EntityNodesResponse) XXX_Size() int {
	return xxx_messageInfo_EntityNodesResponse.Size(m)
}
func (m *EntityNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EntityNodesResponse proto.InternalMessageInfo

func (m *EntityNodesResponse) GetNode() []*common.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type NodeTransportResponse struct {
	Addresses            []*common.Address   `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Certificate          *common.Certificate `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NodeTransportResponse) Reset()         { *m = NodeTransportResponse{} }
func (m *NodeTransportResponse) String() string { return proto.CompactTextString(m) }
func (*NodeTransportResponse) ProtoMessage()    {}
func (*NodeTransportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{18}
}
func (m *NodeTransportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeTransportResponse.Unmarshal(m, b)
}
func (m *NodeTransportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeTransportResponse.Marshal(b, m, deterministic)
}
func (dst *NodeTransportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeTransportResponse.Merge(dst, src)
}
func (m *NodeTransportResponse) XXX_Size() int {
	return xxx_messageInfo_NodeTransportResponse.Size(m)
}
func (m *NodeTransportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeTransportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeTransportResponse proto.InternalMessageInfo

func (m *NodeTransportResponse) GetAddresses() []*common.Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *NodeTransportResponse) GetCertificate() *common.Certificate {
	if m != nil {
		return m.Certificate
	}
	return nil
}

type WatchNodeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchNodeRequest) Reset()         { *m = WatchNodeRequest{} }
func (m *WatchNodeRequest) String() string { return proto.CompactTextString(m) }
func (*WatchNodeRequest) ProtoMessage()    {}
func (*WatchNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{19}
}
func (m *WatchNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchNodeRequest.Unmarshal(m, b)
}
func (m *WatchNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchNodeRequest.Marshal(b, m, deterministic)
}
func (dst *WatchNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchNodeRequest.Merge(dst, src)
}
func (m *WatchNodeRequest) XXX_Size() int {
	return xxx_messageInfo_WatchNodeRequest.Size(m)
}
func (m *WatchNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchNodeRequest proto.InternalMessageInfo

type WatchNodeResponse struct {
	EventType            WatchNodeResponse_ChangeType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=registry.WatchNodeResponse_ChangeType" json:"event_type,omitempty"`
	Node                 *common.Node                 `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WatchNodeResponse) Reset()         { *m = WatchNodeResponse{} }
func (m *WatchNodeResponse) String() string { return proto.CompactTextString(m) }
func (*WatchNodeResponse) ProtoMessage()    {}
func (*WatchNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{20}
}
func (m *WatchNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchNodeResponse.Unmarshal(m, b)
}
func (m *WatchNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchNodeResponse.Marshal(b, m, deterministic)
}
func (dst *WatchNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchNodeResponse.Merge(dst, src)
}
func (m *WatchNodeResponse) XXX_Size() int {
	return xxx_messageInfo_WatchNodeResponse.Size(m)
}
func (m *WatchNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchNodeResponse proto.InternalMessageInfo

func (m *WatchNodeResponse) GetEventType() WatchNodeResponse_ChangeType {
	if m != nil {
		return m.EventType
	}
	return WatchNodeResponse_REGISTERED
}

func (m *WatchNodeResponse) GetNode() *common.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type WatchNodeListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchNodeListRequest) Reset()         { *m = WatchNodeListRequest{} }
func (m *WatchNodeListRequest) String() string { return proto.CompactTextString(m) }
func (*WatchNodeListRequest) ProtoMessage()    {}
func (*WatchNodeListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{21}
}
func (m *WatchNodeListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchNodeListRequest.Unmarshal(m, b)
}
func (m *WatchNodeListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchNodeListRequest.Marshal(b, m, deterministic)
}
func (dst *WatchNodeListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchNodeListRequest.Merge(dst, src)
}
func (m *WatchNodeListRequest) XXX_Size() int {
	return xxx_messageInfo_WatchNodeListRequest.Size(m)
}
func (m *WatchNodeListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchNodeListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchNodeListRequest proto.InternalMessageInfo

type WatchNodeListResponse struct {
	Epoch                uint64         `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Node                 []*common.Node `protobuf:"bytes,2,rep,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WatchNodeListResponse) Reset()         { *m = WatchNodeListResponse{} }
func (m *WatchNodeListResponse) String() string { return proto.CompactTextString(m) }
func (*WatchNodeListResponse) ProtoMessage()    {}
func (*WatchNodeListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_99f9aeb21736b8f5, []int{22}
}
func (m *WatchNodeListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchNodeListResponse.Unmarshal(m, b)
}
func (m *WatchNodeListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchNodeListResponse.Marshal(b, m, deterministic)
}
func (dst *WatchNodeListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchNodeListResponse.Merge(dst, src)
}
func (m *WatchNodeListResponse) XXX_Size() int {
	return xxx_messageInfo_WatchNodeListResponse.Size(m)
}
func (m *WatchNodeListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchNodeListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchNodeListResponse proto.InternalMessageInfo

func (m *WatchNodeListResponse) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *WatchNodeListResponse) GetNode() []*common.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterRequest)(nil), "registry.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "registry.RegisterResponse")
	proto.RegisterType((*DeregisterRequest)(nil), "registry.DeregisterRequest")
	proto.RegisterType((*DeregisterResponse)(nil), "registry.DeregisterResponse")
	proto.RegisterType((*EntityRequest)(nil), "registry.EntityRequest")
	proto.RegisterType((*EntityResponse)(nil), "registry.EntityResponse")
	proto.RegisterType((*EntitiesRequest)(nil), "registry.EntitiesRequest")
	proto.RegisterType((*EntitiesResponse)(nil), "registry.EntitiesResponse")
	proto.RegisterType((*WatchEntityRequest)(nil), "registry.WatchEntityRequest")
	proto.RegisterType((*WatchEntityResponse)(nil), "registry.WatchEntityResponse")
	proto.RegisterType((*RegisterNodeRequest)(nil), "registry.RegisterNodeRequest")
	proto.RegisterType((*RegisterNodeResponse)(nil), "registry.RegisterNodeResponse")
	proto.RegisterType((*NodeRequest)(nil), "registry.NodeRequest")
	proto.RegisterType((*NodeResponse)(nil), "registry.NodeResponse")
	proto.RegisterType((*NodesRequest)(nil), "registry.NodesRequest")
	proto.RegisterType((*NodesResponse)(nil), "registry.NodesResponse")
	proto.RegisterType((*EntityNodesRequest)(nil), "registry.EntityNodesRequest")
	proto.RegisterType((*EntityNodesResponse)(nil), "registry.EntityNodesResponse")
	proto.RegisterType((*NodeTransportResponse)(nil), "registry.NodeTransportResponse")
	proto.RegisterType((*WatchNodeRequest)(nil), "registry.WatchNodeRequest")
	proto.RegisterType((*WatchNodeResponse)(nil), "registry.WatchNodeResponse")
	proto.RegisterType((*WatchNodeListRequest)(nil), "registry.WatchNodeListRequest")
	proto.RegisterType((*WatchNodeListResponse)(nil), "registry.WatchNodeListResponse")
	proto.RegisterEnum("registry.WatchEntityResponse_ChangeType", WatchEntityResponse_ChangeType_name, WatchEntityResponse_ChangeType_value)
	proto.RegisterEnum("registry.WatchNodeResponse_ChangeType", WatchNodeResponse_ChangeType_name, WatchNodeResponse_ChangeType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EntityRegistryClient is the client API for EntityRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EntityRegistryClient interface {
	RegisterEntity(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	DeregisterEntity(ctx context.Context, in *DeregisterRequest, opts ...grpc.CallOption) (*DeregisterResponse, error)
	GetEntity(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*EntityResponse, error)
	GetEntities(ctx context.Context, in *EntitiesRequest, opts ...grpc.CallOption) (*EntitiesResponse, error)
	WatchEntities(ctx context.Context, in *WatchEntityRequest, opts ...grpc.CallOption) (EntityRegistry_WatchEntitiesClient, error)
	RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeResponse, error)
	GetNode(ctx context.Context, in *NodeRequest, opts ...grpc.CallOption) (*NodeResponse, error)
	GetNodes(ctx context.Context, in *NodesRequest, opts ...grpc.CallOption) (*NodesResponse, error)
	GetNodesForEntity(ctx context.Context, in *EntityNodesRequest, opts ...grpc.CallOption) (*EntityNodesResponse, error)
	GetNodeTransport(ctx context.Context, in *NodeRequest, opts ...grpc.CallOption) (*NodeTransportResponse, error)
	WatchNodes(ctx context.Context, in *WatchNodeRequest, opts ...grpc.CallOption) (EntityRegistry_WatchNodesClient, error)
	WatchNodeList(ctx context.Context, in *WatchNodeListRequest, opts ...grpc.CallOption) (EntityRegistry_WatchNodeListClient, error)
}

type entityRegistryClient struct {
	cc *grpc.ClientConn
}

func NewEntityRegistryClient(cc *grpc.ClientConn) EntityRegistryClient {
	return &entityRegistryClient{cc}
}

func (c *entityRegistryClient) RegisterEntity(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/registry.EntityRegistry/RegisterEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityRegistryClient) DeregisterEntity(ctx context.Context, in *DeregisterRequest, opts ...grpc.CallOption) (*DeregisterResponse, error) {
	out := new(DeregisterResponse)
	err := c.cc.Invoke(ctx, "/registry.EntityRegistry/DeregisterEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityRegistryClient) GetEntity(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*EntityResponse, error) {
	out := new(EntityResponse)
	err := c.cc.Invoke(ctx, "/registry.EntityRegistry/GetEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityRegistryClient) GetEntities(ctx context.Context, in *EntitiesRequest, opts ...grpc.CallOption) (*EntitiesResponse, error) {
	out := new(EntitiesResponse)
	err := c.cc.Invoke(ctx, "/registry.EntityRegistry/GetEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityRegistryClient) WatchEntities(ctx context.Context, in *WatchEntityRequest, opts ...grpc.CallOption) (EntityRegistry_WatchEntitiesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EntityRegistry_serviceDesc.Streams[0], "/registry.EntityRegistry/WatchEntities", opts...)
	if err != nil {
		return nil, err
	}
	x := &entityRegistryWatchEntitiesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EntityRegistry_WatchEntitiesClient interface {
	Recv() (*WatchEntityResponse, error)
	grpc.ClientStream
}

type entityRegistryWatchEntitiesClient struct {
	grpc.ClientStream
}

func (x *entityRegistryWatchEntitiesClient) Recv() (*WatchEntityResponse, error) {
	m := new(WatchEntityResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *entityRegistryClient) RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeResponse, error) {
	out := new(RegisterNodeResponse)
	err := c.cc.Invoke(ctx, "/registry.EntityRegistry/RegisterNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityRegistryClient) GetNode(ctx context.Context, in *NodeRequest, opts ...grpc.CallOption) (*NodeResponse, error) {
	out := new(NodeResponse)
	err := c.cc.Invoke(ctx, "/registry.EntityRegistry/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityRegistryClient) GetNodes(ctx context.Context, in *NodesRequest, opts ...grpc.CallOption) (*NodesResponse, error) {
	out := new(NodesResponse)
	err := c.cc.Invoke(ctx, "/registry.EntityRegistry/GetNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityRegistryClient) GetNodesForEntity(ctx context.Context, in *EntityNodesRequest, opts ...grpc.CallOption) (*EntityNodesResponse, error) {
	out := new(EntityNodesResponse)
	err := c.cc.Invoke(ctx, "/registry.EntityRegistry/GetNodesForEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityRegistryClient) GetNodeTransport(ctx context.Context, in *NodeRequest, opts ...grpc.CallOption) (*NodeTransportResponse, error) {
	out := new(NodeTransportResponse)
	err := c.cc.Invoke(ctx, "/registry.EntityRegistry/GetNodeTransport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entityRegistryClient) WatchNodes(ctx context.Context, in *WatchNodeRequest, opts ...grpc.CallOption) (EntityRegistry_WatchNodesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EntityRegistry_serviceDesc.Streams[1], "/registry.EntityRegistry/WatchNodes", opts...)
	if err != nil {
		return nil, err
	}
	x := &entityRegistryWatchNodesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EntityRegistry_WatchNodesClient interface {
	Recv() (*WatchNodeResponse, error)
	grpc.ClientStream
}

type entityRegistryWatchNodesClient struct {
	grpc.ClientStream
}

func (x *entityRegistryWatchNodesClient) Recv() (*WatchNodeResponse, error) {
	m := new(WatchNodeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *entityRegistryClient) WatchNodeList(ctx context.Context, in *WatchNodeListRequest, opts ...grpc.CallOption) (EntityRegistry_WatchNodeListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EntityRegistry_serviceDesc.Streams[2], "/registry.EntityRegistry/WatchNodeList", opts...)
	if err != nil {
		return nil, err
	}
	x := &entityRegistryWatchNodeListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EntityRegistry_WatchNodeListClient interface {
	Recv() (*WatchNodeListResponse, error)
	grpc.ClientStream
}

type entityRegistryWatchNodeListClient struct {
	grpc.ClientStream
}

func (x *entityRegistryWatchNodeListClient) Recv() (*WatchNodeListResponse, error) {
	m := new(WatchNodeListResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EntityRegistryServer is the server API for EntityRegistry service.
type EntityRegistryServer interface {
	RegisterEntity(context.Context, *RegisterRequest) (*RegisterResponse, error)
	DeregisterEntity(context.Context, *DeregisterRequest) (*DeregisterResponse, error)
	GetEntity(context.Context, *EntityRequest) (*EntityResponse, error)
	GetEntities(context.Context, *EntitiesRequest) (*EntitiesResponse, error)
	WatchEntities(*WatchEntityRequest, EntityRegistry_WatchEntitiesServer) error
	RegisterNode(context.Context, *RegisterNodeRequest) (*RegisterNodeResponse, error)
	GetNode(context.Context, *NodeRequest) (*NodeResponse, error)
	GetNodes(context.Context, *NodesRequest) (*NodesResponse, error)
	GetNodesForEntity(context.Context, *EntityNodesRequest) (*EntityNodesResponse, error)
	GetNodeTransport(context.Context, *NodeRequest) (*NodeTransportResponse, error)
	WatchNodes(*WatchNodeRequest, EntityRegistry_WatchNodesServer) error
	WatchNodeList(*WatchNodeListRequest, EntityRegistry_WatchNodeListServer) error
}

func RegisterEntityRegistryServer(s *grpc.Server, srv EntityRegistryServer) {
	s.RegisterService(&_EntityRegistry_serviceDesc, srv)
}

func _EntityRegistry_RegisterEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityRegistryServer).RegisterEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.EntityRegistry/RegisterEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityRegistryServer).RegisterEntity(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityRegistry_DeregisterEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeregisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityRegistryServer).DeregisterEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.EntityRegistry/DeregisterEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityRegistryServer).DeregisterEntity(ctx, req.(*DeregisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityRegistry_GetEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityRegistryServer).GetEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.EntityRegistry/GetEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityRegistryServer).GetEntity(ctx, req.(*EntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityRegistry_GetEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityRegistryServer).GetEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.EntityRegistry/GetEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityRegistryServer).GetEntities(ctx, req.(*EntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityRegistry_WatchEntities_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchEntityRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EntityRegistryServer).WatchEntities(m, &entityRegistryWatchEntitiesServer{stream})
}

type EntityRegistry_WatchEntitiesServer interface {
	Send(*WatchEntityResponse) error
	grpc.ServerStream
}

type entityRegistryWatchEntitiesServer struct {
	grpc.ServerStream
}

func (x *entityRegistryWatchEntitiesServer) Send(m *WatchEntityResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _EntityRegistry_RegisterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityRegistryServer).RegisterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.EntityRegistry/RegisterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityRegistryServer).RegisterNode(ctx, req.(*RegisterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityRegistry_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityRegistryServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.EntityRegistry/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityRegistryServer).GetNode(ctx, req.(*NodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityRegistry_GetNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityRegistryServer).GetNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.EntityRegistry/GetNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityRegistryServer).GetNodes(ctx, req.(*NodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityRegistry_GetNodesForEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityRegistryServer).GetNodesForEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.EntityRegistry/GetNodesForEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityRegistryServer).GetNodesForEntity(ctx, req.(*EntityNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityRegistry_GetNodeTransport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityRegistryServer).GetNodeTransport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.EntityRegistry/GetNodeTransport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityRegistryServer).GetNodeTransport(ctx, req.(*NodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntityRegistry_WatchNodes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchNodeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EntityRegistryServer).WatchNodes(m, &entityRegistryWatchNodesServer{stream})
}

type EntityRegistry_WatchNodesServer interface {
	Send(*WatchNodeResponse) error
	grpc.ServerStream
}

type entityRegistryWatchNodesServer struct {
	grpc.ServerStream
}

func (x *entityRegistryWatchNodesServer) Send(m *WatchNodeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _EntityRegistry_WatchNodeList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchNodeListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EntityRegistryServer).WatchNodeList(m, &entityRegistryWatchNodeListServer{stream})
}

type EntityRegistry_WatchNodeListServer interface {
	Send(*WatchNodeListResponse) error
	grpc.ServerStream
}

type entityRegistryWatchNodeListServer struct {
	grpc.ServerStream
}

func (x *entityRegistryWatchNodeListServer) Send(m *WatchNodeListResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _EntityRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "registry.EntityRegistry",
	HandlerType: (*EntityRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterEntity",
			Handler:    _EntityRegistry_RegisterEntity_Handler,
		},
		{
			MethodName: "DeregisterEntity",
			Handler:    _EntityRegistry_DeregisterEntity_Handler,
		},
		{
			MethodName: "GetEntity",
			Handler:    _EntityRegistry_GetEntity_Handler,
		},
		{
			MethodName: "GetEntities",
			Handler:    _EntityRegistry_GetEntities_Handler,
		},
		{
			MethodName: "RegisterNode",
			Handler:    _EntityRegistry_RegisterNode_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _EntityRegistry_GetNode_Handler,
		},
		{
			MethodName: "GetNodes",
			Handler:    _EntityRegistry_GetNodes_Handler,
		},
		{
			MethodName: "GetNodesForEntity",
			Handler:    _EntityRegistry_GetNodesForEntity_Handler,
		},
		{
			MethodName: "GetNodeTransport",
			Handler:    _EntityRegistry_GetNodeTransport_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchEntities",
			Handler:       _EntityRegistry_WatchEntities_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WatchNodes",
			Handler:       _EntityRegistry_WatchNodes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WatchNodeList",
			Handler:       _EntityRegistry_WatchNodeList_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "registry/entity.proto",
}

func init() { proto.RegisterFile("registry/entity.proto", fileDescriptor_entity_99f9aeb21736b8f5) }

var fileDescriptor_entity_99f9aeb21736b8f5 = []byte{
	// 763 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x96, 0xdf, 0x4e, 0x1a, 0x4f,
	0x14, 0xc7, 0x01, 0xfd, 0xa9, 0x1c, 0x10, 0x61, 0x00, 0xf5, 0x87, 0xa2, 0x66, 0xd2, 0x18, 0x2f,
	0x2c, 0x58, 0x9b, 0xa6, 0xd5, 0xa4, 0x49, 0xad, 0x22, 0x31, 0x31, 0xb5, 0x59, 0x49, 0x9a, 0xf4,
	0xa6, 0x59, 0xd9, 0x53, 0x98, 0xb4, 0xec, 0x6e, 0x77, 0xc6, 0x26, 0x5c, 0xf4, 0x39, 0xfa, 0x12,
	0xbd, 0xee, 0xf3, 0x35, 0xec, 0xce, 0xec, 0xce, 0x2e, 0xbb, 0xa4, 0xbd, 0xd2, 0x3d, 0xe7, 0x7c,
	0x3f, 0x33, 0x67, 0xce, 0x9f, 0x00, 0x4d, 0x0f, 0x47, 0x8c, 0x0b, 0x6f, 0xda, 0x45, 0x5b, 0x30,
	0x31, 0xed, 0xb8, 0x9e, 0x23, 0x1c, 0xb2, 0xa6, 0xcc, 0xad, 0xfa, 0xd0, 0x99, 0x4c, 0x1c, 0xbb,
	0x1b, 0xfc, 0x09, 0xdc, 0xf4, 0x0c, 0x36, 0x0c, 0x3f, 0x00, 0x3d, 0x03, 0xbf, 0x3d, 0x22, 0x17,
	0xe4, 0x10, 0x56, 0x02, 0xc2, 0x76, 0xfe, 0x20, 0x7f, 0x54, 0x3a, 0xad, 0x74, 0xa4, 0xe2, 0x9e,
	0x8d, 0x6c, 0xb4, 0x0c, 0xe9, 0xa5, 0x04, 0xaa, 0x91, 0x94, 0xbb, 0x8e, 0xcd, 0x91, 0x5e, 0x40,
	0xed, 0x0a, 0xbd, 0x04, 0xf0, 0x18, 0x8a, 0x82, 0x4d, 0x90, 0x0b, 0x73, 0xe2, 0x66, 0x30, 0xa3,
	0x00, 0xda, 0x00, 0xa2, 0x23, 0x24, 0x78, 0x1f, 0xd6, 0x7b, 0xfe, 0xb1, 0x0a, 0x5a, 0x81, 0x02,
	0xb3, 0x7c, 0x5a, 0xd9, 0x28, 0x30, 0x8b, 0xbe, 0x82, 0x8a, 0x0a, 0x08, 0x24, 0xd9, 0x79, 0xc8,
	0x38, 0x95, 0x47, 0x0d, 0x36, 0x7c, 0x0b, 0x43, 0x2e, 0xe1, 0xf4, 0x1c, 0xaa, 0x91, 0x29, 0x05,
	0xb7, 0xb4, 0x00, 0xd7, 0x00, 0xf2, 0xc1, 0x14, 0xc3, 0x71, 0xec, 0xba, 0xf4, 0x77, 0x1e, 0xea,
	0x31, 0xb3, 0xa4, 0xf6, 0x01, 0xf0, 0x3b, 0xda, 0xe2, 0x93, 0x98, 0xba, 0xe8, 0x5f, 0xb4, 0x72,
	0x7a, 0xd4, 0x51, 0x35, 0xeb, 0xa4, 0x48, 0x3a, 0x97, 0x63, 0xd3, 0x1e, 0xe1, 0x60, 0xea, 0xa2,
	0x51, 0xf4, 0xb5, 0xb3, 0x7f, 0xb5, 0xeb, 0x15, 0x16, 0x66, 0xdb, 0x01, 0x88, 0x00, 0xa4, 0x02,
	0x60, 0xf4, 0xfa, 0x37, 0xf7, 0x83, 0x9e, 0xd1, 0xbb, 0xaa, 0xe6, 0x48, 0x15, 0xca, 0x57, 0x3d,
	0xcd, 0x92, 0xa7, 0x67, 0x50, 0x57, 0x55, 0x7e, 0xe7, 0x58, 0xa8, 0x9e, 0x9f, 0xc2, 0xb2, 0xed,
	0x58, 0x98, 0x51, 0x4e, 0xdf, 0x47, 0x37, 0xa1, 0x11, 0x97, 0xca, 0x5a, 0xb6, 0xa1, 0xa4, 0xa3,
	0x92, 0x95, 0x3c, 0x81, 0xb2, 0x1e, 0x4e, 0x0e, 0x62, 0x47, 0x95, 0xd5, 0x51, 0x7e, 0x4c, 0x70,
	0xd0, 0x93, 0x40, 0xa1, 0xca, 0x47, 0x1a, 0xf0, 0x1f, 0xba, 0xce, 0x70, 0xec, 0x4b, 0x96, 0x8d,
	0xe0, 0x83, 0x3e, 0x83, 0x75, 0x19, 0x35, 0x07, 0x5e, 0xca, 0x04, 0x93, 0xe0, 0xf9, 0x62, 0xf8,
	0xe4, 0x85, 0x5f, 0x42, 0x3d, 0x16, 0xf5, 0xd7, 0xf8, 0x1f, 0xd0, 0x9c, 0x7d, 0x0d, 0x3c, 0xd3,
	0xe6, 0xae, 0xe3, 0x89, 0x50, 0xfa, 0x14, 0x8a, 0xa6, 0x65, 0x79, 0xc8, 0x39, 0x72, 0xa9, 0xdf,
	0x50, 0xfa, 0x8b, 0xc0, 0x61, 0x44, 0x11, 0xe4, 0x05, 0x94, 0x86, 0xe8, 0x09, 0xf6, 0x99, 0x0d,
	0x4d, 0x81, 0xb2, 0x01, 0xea, 0x4a, 0x70, 0x19, 0xb9, 0x0c, 0x3d, 0x6e, 0x36, 0xc0, 0x7e, 0x7f,
	0x69, 0xc5, 0xa0, 0xbf, 0xf2, 0x50, 0xd3, 0x8c, 0xf2, 0x3e, 0xbd, 0x94, 0x2e, 0x3d, 0x4c, 0x74,
	0xa9, 0x2e, 0xc8, 0xe8, 0x51, 0xf5, 0x22, 0x85, 0xcc, 0x4a, 0xfe, 0x6b, 0x77, 0x6e, 0x42, 0x23,
	0x3c, 0xfc, 0x96, 0x71, 0xa1, 0xd2, 0xb8, 0x83, 0x66, 0xc2, 0x2e, 0x33, 0x49, 0x6d, 0x0d, 0xed,
	0x62, 0x19, 0xa5, 0x3a, 0xfd, 0xb9, 0x1a, 0xed, 0x97, 0x20, 0x6b, 0x72, 0x03, 0x15, 0xd5, 0xde,
	0x81, 0x87, 0xfc, 0x1f, 0x3d, 0x49, 0x62, 0xa9, 0xb6, 0x5a, 0x69, 0x2e, 0x39, 0x0f, 0x39, 0x72,
	0x07, 0xd5, 0x68, 0xe7, 0x49, 0xd8, 0x4e, 0xa4, 0x98, 0x5b, 0xa9, 0xad, 0xdd, 0x74, 0x67, 0x08,
	0x7c, 0x03, 0xc5, 0x3e, 0x0a, 0x49, 0xda, 0x8a, 0x82, 0x63, 0x4b, 0xa9, 0xb5, 0x3d, 0xef, 0x08,
	0x09, 0xd7, 0x50, 0x52, 0x04, 0x86, 0x5c, 0x4f, 0x2d, 0xb1, 0x2c, 0xf5, 0xd4, 0x92, 0x4b, 0x93,
	0xe6, 0xc8, 0x7b, 0x58, 0x8f, 0x96, 0xd8, 0x8c, 0xb4, 0x9b, 0xb1, 0xdd, 0x02, 0x58, 0x7b, 0xe1,
	0xee, 0xa3, 0xb9, 0x93, 0x3c, 0xb9, 0x83, 0xb2, 0xbe, 0x56, 0x48, 0x7b, 0xfe, 0x69, 0xb5, 0x8e,
	0x6e, 0xed, 0x65, 0xb9, 0xc3, 0x2b, 0x9e, 0xc3, 0x6a, 0x1f, 0x85, 0xcf, 0x6a, 0x46, 0xc1, 0x3a,
	0x63, 0x33, 0x69, 0x0e, 0xb5, 0xaf, 0x61, 0x4d, 0x6a, 0x39, 0x49, 0x44, 0x85, 0x0f, 0xb4, 0x35,
	0x67, 0x0f, 0xe5, 0x06, 0xd4, 0x94, 0xfc, 0xda, 0x51, 0x95, 0xdf, 0x4d, 0x96, 0x25, 0x46, 0x6b,
	0x67, 0x78, 0x43, 0xe6, 0x2d, 0x54, 0x25, 0x33, 0x5c, 0x2c, 0x59, 0x79, 0xed, 0xc7, 0xcd, 0x73,
	0x8b, 0x88, 0xe6, 0xc8, 0x0d, 0x40, 0x38, 0x49, 0x9c, 0xb4, 0x52, 0x87, 0x3e, 0x80, 0xed, 0x2c,
	0x58, 0x08, 0x7e, 0xe1, 0x06, 0xb2, 0x15, 0xd4, 0x50, 0x92, 0xbd, 0x14, 0x85, 0x36, 0xc5, 0xfa,
	0xf5, 0x52, 0xa7, 0x79, 0x46, 0x7d, 0xdb, 0xf9, 0x78, 0x3c, 0x62, 0x62, 0xfc, 0xf8, 0x30, 0x9b,
	0xda, 0xae, 0x63, 0x72, 0xc6, 0xbf, 0x9a, 0x0f, 0xbc, 0x8b, 0x5f, 0x98, 0x85, 0x76, 0x77, 0xe4,
	0x74, 0x47, 0x9e, 0x3b, 0xec, 0x2a, 0xd2, 0xc3, 0x8a, 0xff, 0xc3, 0xe7, 0xf9, 0x9f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xa2, 0xff, 0x3a, 0x70, 0x30, 0x09, 0x00, 0x00,
}
