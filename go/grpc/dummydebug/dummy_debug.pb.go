// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dummydebug/dummy_debug.proto

package dummydebug // import "github.com/oasislabs/ekiden/go/grpc/dummydebug"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SetEpochRequest struct {
	// The new epoch.
	Epoch                uint64   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetEpochRequest) Reset()         { *m = SetEpochRequest{} }
func (m *SetEpochRequest) String() string { return proto.CompactTextString(m) }
func (*SetEpochRequest) ProtoMessage()    {}
func (*SetEpochRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dummy_debug_073e0af3deefc1a3, []int{0}
}
func (m *SetEpochRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetEpochRequest.Unmarshal(m, b)
}
func (m *SetEpochRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetEpochRequest.Marshal(b, m, deterministic)
}
func (dst *SetEpochRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetEpochRequest.Merge(dst, src)
}
func (m *SetEpochRequest) XXX_Size() int {
	return xxx_messageInfo_SetEpochRequest.Size(m)
}
func (m *SetEpochRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetEpochRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetEpochRequest proto.InternalMessageInfo

func (m *SetEpochRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type SetEpochResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetEpochResponse) Reset()         { *m = SetEpochResponse{} }
func (m *SetEpochResponse) String() string { return proto.CompactTextString(m) }
func (*SetEpochResponse) ProtoMessage()    {}
func (*SetEpochResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dummy_debug_073e0af3deefc1a3, []int{1}
}
func (m *SetEpochResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetEpochResponse.Unmarshal(m, b)
}
func (m *SetEpochResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetEpochResponse.Marshal(b, m, deterministic)
}
func (dst *SetEpochResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetEpochResponse.Merge(dst, src)
}
func (m *SetEpochResponse) XXX_Size() int {
	return xxx_messageInfo_SetEpochResponse.Size(m)
}
func (m *SetEpochResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetEpochResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetEpochResponse proto.InternalMessageInfo

type WaitNodesRequest struct {
	// Number of nodes to wait for.
	Nodes                uint64   `protobuf:"varint,1,opt,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitNodesRequest) Reset()         { *m = WaitNodesRequest{} }
func (m *WaitNodesRequest) String() string { return proto.CompactTextString(m) }
func (*WaitNodesRequest) ProtoMessage()    {}
func (*WaitNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dummy_debug_073e0af3deefc1a3, []int{2}
}
func (m *WaitNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitNodesRequest.Unmarshal(m, b)
}
func (m *WaitNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitNodesRequest.Marshal(b, m, deterministic)
}
func (dst *WaitNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitNodesRequest.Merge(dst, src)
}
func (m *WaitNodesRequest) XXX_Size() int {
	return xxx_messageInfo_WaitNodesRequest.Size(m)
}
func (m *WaitNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WaitNodesRequest proto.InternalMessageInfo

func (m *WaitNodesRequest) GetNodes() uint64 {
	if m != nil {
		return m.Nodes
	}
	return 0
}

type WaitNodesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitNodesResponse) Reset()         { *m = WaitNodesResponse{} }
func (m *WaitNodesResponse) String() string { return proto.CompactTextString(m) }
func (*WaitNodesResponse) ProtoMessage()    {}
func (*WaitNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dummy_debug_073e0af3deefc1a3, []int{3}
}
func (m *WaitNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitNodesResponse.Unmarshal(m, b)
}
func (m *WaitNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitNodesResponse.Marshal(b, m, deterministic)
}
func (dst *WaitNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitNodesResponse.Merge(dst, src)
}
func (m *WaitNodesResponse) XXX_Size() int {
	return xxx_messageInfo_WaitNodesResponse.Size(m)
}
func (m *WaitNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WaitNodesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SetEpochRequest)(nil), "dummy_debug.SetEpochRequest")
	proto.RegisterType((*SetEpochResponse)(nil), "dummy_debug.SetEpochResponse")
	proto.RegisterType((*WaitNodesRequest)(nil), "dummy_debug.WaitNodesRequest")
	proto.RegisterType((*WaitNodesResponse)(nil), "dummy_debug.WaitNodesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DummyDebugClient is the client API for DummyDebug service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DummyDebugClient interface {
	// Manually set the epoch and notify subscribers.
	SetEpoch(ctx context.Context, in *SetEpochRequest, opts ...grpc.CallOption) (*SetEpochResponse, error)
	// Watch the registry and wait for given number of compute nodes.
	WaitNodes(ctx context.Context, in *WaitNodesRequest, opts ...grpc.CallOption) (*WaitNodesResponse, error)
}

type dummyDebugClient struct {
	cc *grpc.ClientConn
}

func NewDummyDebugClient(cc *grpc.ClientConn) DummyDebugClient {
	return &dummyDebugClient{cc}
}

func (c *dummyDebugClient) SetEpoch(ctx context.Context, in *SetEpochRequest, opts ...grpc.CallOption) (*SetEpochResponse, error) {
	out := new(SetEpochResponse)
	err := c.cc.Invoke(ctx, "/dummy_debug.DummyDebug/SetEpoch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dummyDebugClient) WaitNodes(ctx context.Context, in *WaitNodesRequest, opts ...grpc.CallOption) (*WaitNodesResponse, error) {
	out := new(WaitNodesResponse)
	err := c.cc.Invoke(ctx, "/dummy_debug.DummyDebug/WaitNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DummyDebugServer is the server API for DummyDebug service.
type DummyDebugServer interface {
	// Manually set the epoch and notify subscribers.
	SetEpoch(context.Context, *SetEpochRequest) (*SetEpochResponse, error)
	// Watch the registry and wait for given number of compute nodes.
	WaitNodes(context.Context, *WaitNodesRequest) (*WaitNodesResponse, error)
}

func RegisterDummyDebugServer(s *grpc.Server, srv DummyDebugServer) {
	s.RegisterService(&_DummyDebug_serviceDesc, srv)
}

func _DummyDebug_SetEpoch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetEpochRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DummyDebugServer).SetEpoch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dummy_debug.DummyDebug/SetEpoch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DummyDebugServer).SetEpoch(ctx, req.(*SetEpochRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DummyDebug_WaitNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DummyDebugServer).WaitNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dummy_debug.DummyDebug/WaitNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DummyDebugServer).WaitNodes(ctx, req.(*WaitNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DummyDebug_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dummy_debug.DummyDebug",
	HandlerType: (*DummyDebugServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetEpoch",
			Handler:    _DummyDebug_SetEpoch_Handler,
		},
		{
			MethodName: "WaitNodes",
			Handler:    _DummyDebug_WaitNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dummydebug/dummy_debug.proto",
}

func init() {
	proto.RegisterFile("dummydebug/dummy_debug.proto", fileDescriptor_dummy_debug_073e0af3deefc1a3)
}

var fileDescriptor_dummy_debug_073e0af3deefc1a3 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x49, 0x29, 0xcd, 0xcd,
	0xad, 0x4c, 0x49, 0x4d, 0x2a, 0x4d, 0xd7, 0x07, 0x33, 0xe3, 0xc1, 0x6c, 0xbd, 0x82, 0xa2, 0xfc,
	0x92, 0x7c, 0x21, 0x6e, 0x24, 0x21, 0x25, 0x75, 0x2e, 0xfe, 0xe0, 0xd4, 0x12, 0xd7, 0x82, 0xfc,
	0xe4, 0x8c, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x11, 0x2e, 0xd6, 0x54, 0x10, 0x5f,
	0x82, 0x51, 0x81, 0x51, 0x83, 0x25, 0x08, 0xc2, 0x51, 0x12, 0xe2, 0x12, 0x40, 0x28, 0x2c, 0x2e,
	0xc8, 0xcf, 0x2b, 0x4e, 0x55, 0xd2, 0xe0, 0x12, 0x08, 0x4f, 0xcc, 0x2c, 0xf1, 0xcb, 0x4f, 0x49,
	0x2d, 0x46, 0xd2, 0x9d, 0x07, 0xe2, 0xc3, 0x74, 0x83, 0x39, 0x4a, 0xc2, 0x5c, 0x82, 0x48, 0x2a,
	0x21, 0xda, 0x8d, 0x96, 0x32, 0x72, 0x71, 0xb9, 0x80, 0xdc, 0xe2, 0x02, 0x72, 0x8a, 0x90, 0x27,
	0x17, 0x07, 0xcc, 0x06, 0x21, 0x19, 0x3d, 0x64, 0x77, 0xa3, 0xb9, 0x50, 0x4a, 0x16, 0x87, 0x2c,
	0xd4, 0x59, 0x0c, 0x42, 0x3e, 0x5c, 0x9c, 0x70, 0xeb, 0x84, 0x50, 0x55, 0xa3, 0x3b, 0x58, 0x4a,
	0x0e, 0x97, 0x34, 0xcc, 0x34, 0x27, 0x83, 0x28, 0xbd, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd,
	0xe4, 0xfc, 0x5c, 0xfd, 0xfc, 0xc4, 0xe2, 0xcc, 0xe2, 0x9c, 0xc4, 0xa4, 0x62, 0xfd, 0xd4, 0xec,
	0xcc, 0x94, 0xd4, 0x3c, 0xfd, 0xf4, 0x7c, 0xfd, 0xf4, 0xa2, 0x82, 0x64, 0x7d, 0x44, 0xa0, 0x27,
	0xb1, 0x81, 0x43, 0xda, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xef, 0x04, 0xb6, 0x89, 0x01,
	0x00, 0x00,
}
